%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2  

imu_topic: "/imu/data_raw"
image0_topic: "/stereo/left/image_mono"
# image0_topic: "/stereo/left/image_raw"
image1_topic: "/stereo/right/image_mono"
# image1_topic: "/stereo/right/image_raw"
output_path: "/home/daybeha/Documents/github/ratslam_ws/results/VINS-Fusion/"

cam0_calib: "cam0.yaml"
cam1_calib: "cam1.yaml"
image_width: 1280
image_height: 560



# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
#   data: [-0.00681,-0.01532,0.99987,1.71239,
#          -0.99998,0.00033,-0.00680,0.24740,
#          -0.00023,-0.99988,-0.01532,-0.11589,
#          0.0, 0.0, 0.0, 1.0]
   data: [-0.00680499, -0.0153215, 0.99985, 1.71239,
          -0.999977, 0.000334627, -0.00680066, 0.247401,
          -0.000230383, -0.999883, -0.0153234, -0.11589,
           0.0, 0.0, 0.0, 1.0 ]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
#   data: [-0.01036,-0.01075,0.99990,1.70544,
#          -0.99994,-0.00178,-0.01038,-0.22770,
#          0.00189,-0.99994,-0.01073,-0.11611,
#          0.0, 0.0, 0.0, 1.0]
   data: [-0.0103594179155349, -0.0107508094081096, 0.999879083343917, 1.70544279842743,
          -0.999944732877086, -0.00177923255364225, -0.0103791619872995, -0.227697484219339,
          0.00189061929257307, -0.999941062875605, -0.0107317140654149, -0.116114609097756,
          0.0, 0.0, 0.0, 1.0 ]



#Multiple thread support
multiple_thread: 1


#为了适配深度学习的模型，需要将缩放图像
newWidth: 640
newHeight: 400

keypoints_type: "AKAZE"  # SuperPoint, ORB, AKAZE,  CONTOUR
descriptor_type: "AKAZE" # SuperPoint, ORB, AKAZE, BRIEF
match_type: "LK"  # BF_HAMMING, BF_L2, SuperGlue, LK
point_model_path: "/home/daybeha/Documents/github/feature_track_ws/src/models/SuperPoint.onnx"
match_model_path: "/home/daybeha/Documents/github/feature_track_ws/src/models/SuperGlue.onnx"


#feature traker paprameters
max_cnt: 300            # max feature number in feature tracking
min_dist: 15 #30            # min distance between two features
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy



#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)


##imu parameters       The more accurate parameters you provide, the better performance
acc_n: 5.8860e-03          # accelerometer measurement noise standard deviation.
gyr_n: 1.7453e-04        # gyroscope measurement noise standard deviation.
acc_w: 1.0000e-04        # accelerometer bias random work noise standard deviation.
gyr_w: 1.0000e-05      # gyroscope bias random work noise standard deviation.
g_norm: 9.81007     # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "~/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 

